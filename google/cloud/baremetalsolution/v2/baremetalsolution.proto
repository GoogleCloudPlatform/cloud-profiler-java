// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.baremetalsolution.v2;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/longrunning/operations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Cloud.BaremetalSolution.V2";
option go_package = "google.golang.org/genproto/googleapis/cloud/baremetalsolution/v2;baremetalsolution";
option java_multiple_files = true;
option java_outer_classname = "BaremetalsolutionProto";
option java_package = "com.google.cloud.baremetalsolution.v2";
option php_namespace = "Google\\Cloud\\BaremetalSolution\\V2";
option ruby_package = "Google::Cloud::BaremetalSolution::V2";

// Performs management operations on Bare Metal Solution servers.
//
// The `baremetalsolution.googleapis.com` service provides management
// capabilities for Bare Metal Solution servers. To access the API methods, you
// must assign Bare Metal Solution IAM roles containing the desired permissions
// to your staff in your Google Cloud project. You must also enable the Bare
// Metal Solution API. Once enabled, the methods act
// upon specific servers in your Bare Metal Solution environment.
service BareMetalSolution {
  option (google.api.default_host) = "baremetalsolution.googleapis.com";
  option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

  // List servers in a given project and location.
  rpc ListInstances(ListInstancesRequest) returns (ListInstancesResponse) {
    option (google.api.http) = {
      get: "/v2/{parent=projects/*/locations/*}/instances"
    };
    option (google.api.method_signature) = "parent";
  }

  // Get details about a single server.
  rpc GetInstance(GetInstanceRequest) returns (Instance) {
    option (google.api.http) = {
      get: "/v2/{name=projects/*/locations/*/instances/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Perform an ungraceful, hard reset on a server. Equivalent to shutting the
  // power off and then turning it back on.
  rpc ResetInstance(ResetInstanceRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v2/{name=projects/*/locations/*/instances/*}:reset"
      body: "*"
    };
    option (google.api.method_signature) = "name";
    option (google.longrunning.operation_info) = {
      response_type: "ResetInstanceResponse"
      metadata_type: "OperationMetadata"
    };
  }

  // List storage volumes in a given project and location.
  rpc ListVolumes(ListVolumesRequest) returns (ListVolumesResponse) {
    option (google.api.http) = {
      get: "/v2/{parent=projects/*/locations/*}/volumes"
    };
    option (google.api.method_signature) = "parent";
  }

  // Get details of a single storage volume.
  rpc GetVolume(GetVolumeRequest) returns (Volume) {
    option (google.api.http) = {
      get: "/v2/{name=projects/*/locations/*/volumes/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Update details of a single storage volume.
  rpc UpdateVolume(UpdateVolumeRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      patch: "/v2/{volume.name=projects/*/locations/*/volumes/*}"
      body: "volume"
    };
    option (google.api.method_signature) = "volume,update_mask";
    option (google.longrunning.operation_info) = {
      response_type: "Volume"
      metadata_type: "OperationMetadata"
    };
  }

  // List network in a given project and location.
  rpc ListNetworks(ListNetworksRequest) returns (ListNetworksResponse) {
    option (google.api.http) = {
      get: "/v2/{parent=projects/*/locations/*}/networks"
    };
    option (google.api.method_signature) = "parent";
  }

  // Get details of a single network.
  rpc GetNetwork(GetNetworkRequest) returns (Network) {
    option (google.api.http) = {
      get: "/v2/{name=projects/*/locations/*/networks/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // List snapshot schedule policies in a given project and location.
  rpc ListSnapshotSchedulePolicies(ListSnapshotSchedulePoliciesRequest) returns (ListSnapshotSchedulePoliciesResponse) {
    option (google.api.http) = {
      get: "/v2/{parent=projects/*/locations/*}/snapshotSchedulePolicies"
    };
    option (google.api.method_signature) = "parent";
  }

  // Get details of a single snapshot schedule policy.
  rpc GetSnapshotSchedulePolicy(GetSnapshotSchedulePolicyRequest) returns (SnapshotSchedulePolicy) {
    option (google.api.http) = {
      get: "/v2/{name=projects/*/locations/*/snapshotSchedulePolicies/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Create a snapshot schedule policy in the specified project.
  rpc CreateSnapshotSchedulePolicy(CreateSnapshotSchedulePolicyRequest) returns (SnapshotSchedulePolicy) {
    option (google.api.http) = {
      post: "/v2/{parent=projects/*/locations/*}/snapshotSchedulePolicies"
      body: "snapshot_schedule_policy"
    };
    option (google.api.method_signature) = "parent,snapshot_schedule_policy,snapshot_schedule_policy_id";
  }

  // Update a snapshot schedule policy in the specified project.
  rpc UpdateSnapshotSchedulePolicy(UpdateSnapshotSchedulePolicyRequest) returns (SnapshotSchedulePolicy) {
    option (google.api.http) = {
      patch: "/v2/{snapshot_schedule_policy.name=projects/*/locations/*/snapshotSchedulePolicies/*}"
      body: "snapshot_schedule_policy"
    };
    option (google.api.method_signature) = "snapshot_schedule_policy,update_mask";
  }

  // Delete a named snapshot schedule policy.
  rpc DeleteSnapshotSchedulePolicy(DeleteSnapshotSchedulePolicyRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v2/{name=projects/*/locations/*/snapshotSchedulePolicies/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Create a storage volume snapshot in a containing volume.
  rpc CreateVolumeSnapshot(CreateVolumeSnapshotRequest) returns (VolumeSnapshot) {
    option (google.api.http) = {
      post: "/v2/{parent=projects/*/locations/*/volumes/*}/snapshots"
      body: "volume_snapshot"
    };
    option (google.api.method_signature) = "parent,volume_snapshot";
  }

  // Restore a storage volume snapshot to its containing volume.
  rpc RestoreVolumeSnapshot(RestoreVolumeSnapshotRequest) returns (google.longrunning.Operation) {
    option (google.api.http) = {
      post: "/v2/{volume_snapshot=projects/*/locations/*/volumes/*/snapshots/*}:restoreVolumeSnapshot"
      body: "*"
    };
    option (google.api.method_signature) = "volume_snapshot";
    option (google.longrunning.operation_info) = {
      response_type: "VolumeSnapshot"
      metadata_type: "OperationMetadata"
    };
  }

  // Deletes a storage volume snapshot for a given volume.
  rpc DeleteVolumeSnapshot(DeleteVolumeSnapshotRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v2/{name=projects/*/locations/*/volumes/*/snapshots/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Get details of a single storage volume snapshot.
  rpc GetVolumeSnapshot(GetVolumeSnapshotRequest) returns (VolumeSnapshot) {
    option (google.api.http) = {
      get: "/v2/{name=projects/*/locations/*/volumes/*/snapshots/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // List storage volume snapshots for given storage volume.
  rpc ListVolumeSnapshots(ListVolumeSnapshotsRequest) returns (ListVolumeSnapshotsResponse) {
    option (google.api.http) = {
      get: "/v2/{parent=projects/*/locations/*/volumes/*}/snapshots"
    };
    option (google.api.method_signature) = "parent";
  }

  // Get details of a single storage logical unit number(LUN).
  rpc GetLun(GetLunRequest) returns (Lun) {
    option (google.api.http) = {
      get: "/v2/{name=projects/*/locations/*/volumes/*/luns/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // List storage volume luns for given storage volume.
  rpc ListLuns(ListLunsRequest) returns (ListLunsResponse) {
    option (google.api.http) = {
      get: "/v2/{parent=projects/*/locations/*/volumes/*}/luns"
    };
    option (google.api.method_signature) = "parent";
  }
}

// A storage volume.
message Volume {
  option (google.api.resource) = {
    type: "baremetalsolution.googleapis.com/Volume"
    pattern: "projects/{project}/locations/{location}/volumes/{volume}"
  };

  // Details about snapshot space reservation and usage on the storage volume.
  message SnapshotReservationDetail {
    // The space on this storage volume reserved for snapshots, shown in GiB.
    int64 reserved_space_gib = 1;

    // The percent of snapshot space on this storage volume actually being used
    // by the snapshot copies. This value might be higher than 100% if the
    // snapshot copies have overflowed into the data portion of the storage
    // volume.
    int32 reserved_space_used_percent = 2;

    // The amount, in GiB, of available space in this storage volume's reserved
    // snapshot space.
    int64 reserved_space_remaining_gib = 3;
  }

  // The storage type for a volume.
  enum StorageType {
    // The storage type for this volume is unknown.
    STORAGE_TYPE_UNSPECIFIED = 0;

    // The storage type for this volume is SSD.
    SSD = 1;

    // This storage type for this volume is HDD.
    HDD = 2;
  }

  // The possible states for a storage volume.
  enum State {
    // The storage volume is in an unknown state.
    STATE_UNSPECIFIED = 0;

    // The storage volume is being created.
    CREATING = 1;

    // The storage volume is ready for use.
    READY = 2;

    // The storage volume has been requested to be deleted.
    DELETING = 3;
  }

  // The kinds of auto delete behavior to use when snapshot reserved space is
  // full.
  enum SnapshotAutoDeleteBehavior {
    // The unspecified behavior.
    SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED = 0;

    // Don't delete any snapshots. This disables new snapshot creation, as
    // long as the snapshot reserved space is full.
    DISABLED = 1;

    // Delete the oldest snapshots first.
    OLDEST_FIRST = 2;

    // Delete the newest snapshots first.
    NEWEST_FIRST = 3;
  }

  // Output only. The resource name of this `Volume`.
  // Resource names are schemeless URIs that follow the conventions in
  // https://cloud.google.com/apis/design/resource_names.
  // Format:
  // `projects/{project}/locations/{location}/volumes/{volume}`
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The storage type for this volume.
  StorageType storage_type = 2;

  // The state of this storage volume.
  State state = 3;

  // The requested size of this storage volume, in GiB.
  int64 requested_size_gib = 4;

  // The current size of this storage volume, in GiB, including space reserved
  // for snapshots. This size might be different than the requested size if the
  // storage volume has been configured with auto grow or auto shrink.
  int64 current_size_gib = 5;

  // The size, in GiB, that this storage volume has expanded as a result of an
  // auto grow policy. In the absence of auto-grow, the value is 0.
  int64 auto_grown_size_gib = 6;

  // The space remaining in the storage volume for new LUNs, in GiB, excluding
  // space reserved for snapshots.
  int64 remaining_space_gib = 7;

  // Details about snapshot space reservation and usage on the storage volume.
  SnapshotReservationDetail snapshot_reservation_detail = 8;

  // The behavior to use when snapshot reserved space is full.
  SnapshotAutoDeleteBehavior snapshot_auto_delete_behavior = 9;

  // The name of the snapshot schedule policy in use for this volume, if any.
  string snapshot_schedule_policy = 10 [(google.api.resource_reference) = {
                                          type: "baremetalsolution.googleapis.com/SnapshotSchedulePolicy"
                                        }];
}

// Message for requesting a list of storage volumes.
message ListVolumesRequest {
  // Required. Parent value for ListVolumesRequest.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "locations.googleapis.com/Location"
    }
  ];

  // Requested page size. The server might return fewer items than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results from the server.
  string page_token = 3;
}

// Response message containing the list of storage volumes.
message ListVolumesResponse {
  // The list of storage volumes.
  repeated Volume volumes = 1;

  // A token identifying a page of results from the server.
  string next_page_token = 2;

  // Locations that could not be reached.
  repeated string unreachable = 3;
}

// Message for requesting storage volume information.
message GetVolumeRequest {
  // Required. Name of the resource.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Volume"
    }
  ];
}

// A storage volume logical unit number (LUN).
message Lun {
  option (google.api.resource) = {
    type: "baremetalsolution.googleapis.com/Lun"
    pattern: "projects/{project}/locations/{location}/volumes/{volume}/luns/{lun}"
  };

  // The possible states for the LUN.
  enum State {
    // The LUN is in an unknown state.
    STATE_UNSPECIFIED = 0;

    // The LUN is being created.
    CREATING = 1;

    // The LUN is being updated.
    UPDATING = 2;

    // The LUN is ready for use.
    READY = 3;

    // The LUN has been requested to be deleted.
    DELETING = 4;
  }

  // Display the operating systems present for the LUN multiprotocol type.
  enum MultiprotocolType {
    // Server has no OS specified.
    MULTIPROTOCOL_TYPE_UNSPECIFIED = 0;

    // Server with Linux OS.
    LINUX = 1;
  }

  // The storage types for a LUN.
  enum StorageType {
    // The storage type for this LUN is unknown.
    STORAGE_TYPE_UNSPECIFIED = 0;

    // This storage type for this LUN is SSD.
    SSD = 1;

    // This storage type for this LUN is HDD.
    HDD = 2;
  }

  // Output only. The name of the LUN.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The state of this storage volume.
  State state = 2;

  // The size of this LUN, in gigabytes.
  int64 size_gb = 3;

  // The LUN multiprotocol type ensures the characteristics of the LUN are
  // optimized for each operating system.
  MultiprotocolType multiprotocol_type = 4;

  // Display the storage volume for this LUN.
  string storage_volume = 5 [(google.api.resource_reference) = {
                               type: "baremetalsolution.googleapis.com/Volume"
                             }];

  // Display if this LUN can be shared between multiple physical servers.
  bool shareable = 6;

  // Display if this LUN is a boot LUN.
  bool boot_lun = 7;

  // The storage type for this LUN.
  StorageType storage_type = 8;

  // The WWID for this LUN.
  string wwid = 9;
}

// A Network.
message Network {
  option (google.api.resource) = {
    type: "baremetalsolution.googleapis.com/Network"
    pattern: "projects/{project}/locations/{location}/networks/{network}"
  };

  // Network type.
  enum Type {
    // Unspecified value.
    TYPE_UNSPECIFIED = 0;

    // Client network, a network peered to a Google Cloud VPC.
    CLIENT = 1;

    // Private network, a network local to the Bare Metal Solution environment.
    PRIVATE = 2;
  }

  // The possible states for this Network.
  enum State {
    // The Network is in an unknown state.
    STATE_UNSPECIFIED = 0;

    // The Network is provisioning.
    PROVISIONING = 1;

    // The Network has been provisioned.
    PROVISIONED = 2;
  }

  // Output only. The resource name of this `Network`.
  // Resource names are schemeless URIs that follow the conventions in
  // https://cloud.google.com/apis/design/resource_names.
  // Format:
  // `projects/{project}/locations/{location}/networks/{network}`
  // This field will contain the same value as field "network", which will soon
  // be deprecated. Please use this field to reference the name of the network
  // resource.
  string name = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Name of the network.
  string network = 1;

  // The type of this network.
  Type type = 2;

  // IP address configured.
  string ip_address = 3;

  // List of physical interfaces.
  repeated string mac_address = 4;

  // The Network state.
  State state = 6;

  // The vlan id of the Network.
  string vlan_id = 7;

  // The cidr of the Network.
  string cidr = 8;

  // The vrf for the Network.
  VRF vrf = 9;
}

// A network VRF.
message VRF {
  // QOS policy parameters.
  message QosPolicy {
    // The bandwidth permitted by the QOS policy, in gbps.
    double bandwidth_gbps = 1;
  }

  // VLAN attachment details.
  message VlanAttachment {
    // The peer vlan ID of the attachment.
    int64 peer_vlan_id = 1;

    // The peer IP of the attachment.
    string peer_ip = 2;

    // The router IP of the attachment.
    string router_ip = 3;
  }

  // The possible states for this VRF.
  enum State {
    // The unspecified state.
    STATE_UNSPECIFIED = 0;

    // The vrf is provisioning.
    PROVISIONING = 1;

    // The vrf is provisioned.
    PROVISIONED = 2;
  }

  // The name of the VRF.
  string name = 1;

  // The possible state of VRF.
  State state = 5;

  // The QOS policy applied to this VRF.
  QosPolicy qos_policy = 6;

  // The list of VLAN attachments for the VRF.
  repeated VlanAttachment vlan_attachments = 7;
}

// Message for requesting a list of networks.
message ListNetworksRequest {
  // Required. Parent value for ListNetworksRequest.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "locations.googleapis.com/Location"
    }
  ];

  // Requested page size. The server might return fewer items than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results from the server.
  string page_token = 3;
}

// Response message containing the list of networks.
message ListNetworksResponse {
  // The list of networks.
  repeated Network networks = 1;

  // A token identifying a page of results from the server.
  string next_page_token = 2;

  // Locations that could not be reached.
  repeated string unreachable = 3;
}

// Message for requesting network information.
message GetNetworkRequest {
  // Required. Name of the resource.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Network"
    }
  ];
}

// Message for requesting snapshot schedule policy information.
message GetSnapshotSchedulePolicyRequest {
  // Required. Name of the resource.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/SnapshotSchedulePolicy"
    }
  ];
}

// A server.
message Instance {
  option (google.api.resource) = {
    type: "baremetalsolution.googleapis.com/Instance"
    pattern: "projects/{project}/locations/{location}/instances/{instance}"
  };

  // The possible states for this server.
  enum State {
    // The server is in an unknown state.
    STATE_UNSPECIFIED = 0;

    // The server is being provisioned.
    PROVISIONING = 1;

    // The server is running.
    RUNNING = 2;

    // The server has been deleted.
    DELETED = 3;
  }

  // Output only. The resource name of this `Instance`.
  // Resource names are schemeless URIs that follow the conventions in
  // https://cloud.google.com/apis/design/resource_names.
  // Format:
  // `projects/{project}/locations/{location}/instances/{instance}`
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Create a time stamp.
  google.protobuf.Timestamp create_time = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Update a time stamp.
  google.protobuf.Timestamp update_time = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The server type.
  // [Available server
  // types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
  string machine_type = 4;

  // The state of the server.
  State state = 5;

  // True if you enable hyperthreading for the server, otherwise false.
  // The default value is false.
  bool hyperthreading_enabled = 6;

  // Labels as key value pairs.
  map<string, string> labels = 7;

  // List of LUNs associated with this server.
  repeated Lun luns = 8;

  // List of networks associated with this server.
  repeated Network networks = 9;

  // True if the interactive serial console feature is enabled for the instance,
  // false otherwise.
  // The default value is false.
  bool interactive_serial_console_enabled = 10;
}

// Message for requesting the list of servers.
message ListInstancesRequest {
  // Required. Parent value for ListInstancesRequest.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "locations.googleapis.com/Location"
    }
  ];

  // Requested page size. Server may return fewer items than requested.
  // If unspecified, the server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results from the server.
  string page_token = 3;
}

// Response message for the list of servers.
message ListInstancesResponse {
  // The list of servers.
  repeated Instance instances = 1;

  // A token identifying a page of results from the server.
  string next_page_token = 2;

  // Locations that could not be reached.
  repeated string unreachable = 3;
}

// Message for requesting server information.
message GetInstanceRequest {
  // Required. Name of the resource.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Instance"
    }
  ];
}

// Message requesting to reset a server.
message ResetInstanceRequest {
  // Required. Name of the resource.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Instance"
    }
  ];
}

// Response message from resetting a server.
message ResetInstanceResponse {

}

// Message for requesting storage volume snapshot information.
message GetVolumeSnapshotRequest {
  // Required. Name of the resource.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/VolumeSnapshot"
    }
  ];
}

// Message for requesting a list of storage volume snapshots.
message ListVolumeSnapshotsRequest {
  // Required. Parent value for ListVolumesRequest.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Volume"
    }
  ];

  // Requested page size. The server might return fewer items than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results from the server.
  string page_token = 3;
}

// Response message containing the list of storage volume snapshots.
message ListVolumeSnapshotsResponse {
  // The list of storage volumes.
  repeated VolumeSnapshot volume_snapshots = 1;

  // A token identifying a page of results from the server.
  string next_page_token = 2;

  // Locations that could not be reached.
  repeated string unreachable = 3;
}

// Message for deleting named Volume snapshot.
message DeleteVolumeSnapshotRequest {
  // Required. The name of the snapshot to delete.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/VolumeSnapshot"
    }
  ];
}

// Represents the metadata from a long-running operation.
message OperationMetadata {
  // The time the operation was created.
  google.protobuf.Timestamp create_time = 1
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time the operation finished running.
  google.protobuf.Timestamp end_time = 2
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Server-defined resource path for the target of the operation.
  string target = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Name of the action executed by the operation.
  string verb = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Human-readable status of the operation, if any.
  string status_message = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Identifies whether the user requested the cancellation
  // of the operation. Operations that have been successfully cancelled
  // have [Operation.error][] value with a [google.rpc.Status.code][] of 1,
  // corresponding to `Code.CANCELLED`.
  bool requested_cancellation = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // API version used with the operation.
  string api_version = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Snapshot registered for a given storage volume.
message VolumeSnapshot {
  option (google.api.resource) = {
    type: "baremetalsolution.googleapis.com/VolumeSnapshot"
    pattern: "projects/{project}/locations/{location}/volumes/{volume}/snapshots/{snapshot}"
  };

  // Output only. The name of the storage volume snapshot.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The description of the storage volume snapshot.
  string description = 2;

  // The size of the storage volume snapshot, in bytes.
  int64 size_bytes = 3;

  // Optional. The creation time of the storage volume snapshot.
  google.protobuf.Timestamp create_time = 4 [(google.api.field_behavior) = OPTIONAL];

  // The storage volume this snapshot belongs to.
  string storage_volume = 5 [(google.api.resource_reference) = {
                               type: "baremetalsolution.googleapis.com/Volume"
                             }];
}

// A snapshot schedule policy.
message SnapshotSchedulePolicy {
  option (google.api.resource) = {
    type: "baremetalsolution.googleapis.com/SnapshotSchedulePolicy"
    pattern: "projects/{project}/locations/{location}/snapshotSchedulePolicies/{snapshot_schedule_policy}"
  };

  // A snapshot schedule.
  message Schedule {
    // A crontab-like specification that the schedule uses to take
    // snapshots.
    string crontab_spec = 1;

    // The maximum number of snapshots to retain in this schedule.
    int32 retention_count = 2;

    // A list of snapshot names created in this schedule.
    string prefix = 3;
  }

  // Output only. The name of the snapshot schedule policy.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The description of the snapshot schedule policy.
  string description = 2;

  // The snapshot schedules contained in this policy. You can specify a maximum
  //  of 5 schedules.
  repeated Schedule schedules = 3;
}

// Message for requesting a list of snapshot schedule policies.
message ListSnapshotSchedulePoliciesRequest {
  // Required. The parent project containing the Snapshot Schedule Policies.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "locations.googleapis.com/Location"
    }
  ];

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

// Response message containing the list of snapshot schedule policies.
message ListSnapshotSchedulePoliciesResponse {
  // The snapshot schedule policies registered in this project.
  repeated SnapshotSchedulePolicy snapshot_schedule_policies = 1;

  // Token to retrieve the next page of results, or empty if there are no more
  // results in the list.
  string next_page_token = 2;
}

// Message for creating a snapshot schedule policy in a project.
message CreateSnapshotSchedulePolicyRequest {
  // Required. The parent project and location containing the SnapshotSchedulePolicy.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "locations.googleapis.com/Location"
    }
  ];

  // Required. The SnapshotSchedulePolicy to create.
  SnapshotSchedulePolicy snapshot_schedule_policy = 2 [(google.api.field_behavior) = REQUIRED];

  // Required. Snapshot policy ID
  string snapshot_schedule_policy_id = 3 [(google.api.field_behavior) = REQUIRED];
}

// Message for updating a snapshot schedule policy in a project.
message UpdateSnapshotSchedulePolicyRequest {
  // Required. The snapshot schedule policy to update.
  //
  // The `name` field is used to identify the snapshot schedule policy to
  // update. Format:
  // projects/{project}/locations/global/snapshotSchedulePolicies/{policy}
  SnapshotSchedulePolicy snapshot_schedule_policy = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The list of fields to update.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// Message for deleting a snapshot schedule policy in a project.
message DeleteSnapshotSchedulePolicyRequest {
  // Required. The name of the snapshot schedule policy to delete.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/SnapshotSchedulePolicy"
    }
  ];
}

// Message for updating a volume.
message UpdateVolumeRequest {
  // Required. The volume to update.
  //
  // The `name` field is used to identify the volume to update.
  // Format: projects/{project}/locations/{location}/volumes/{volume}
  Volume volume = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to update.
  // The only currently supported fields are:
  //   `snapshot_auto_delete_behavior`
  //   `snapshot_schedule_policy_name`
  google.protobuf.FieldMask update_mask = 2;
}

// Message for requesting storage lun information.
message GetLunRequest {
  // Required. Name of the resource.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Lun"
    }
  ];
}

// Message for requesting a list of storage volume luns.
message ListLunsRequest {
  // Required. Parent value for ListLunsRequest.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Volume"
    }
  ];

  // Requested page size. The server might return fewer items than requested.
  // If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // A token identifying a page of results from the server.
  string page_token = 3;
}

// Response message containing the list of storage volume luns.
message ListLunsResponse {
  // The list of luns.
  repeated Lun luns = 1;

  // A token identifying a page of results from the server.
  string next_page_token = 2;

  // Locations that could not be reached.
  repeated string unreachable = 3;
}

// Message for creating a volume snapshot.
message CreateVolumeSnapshotRequest {
  // Required. The volume to snapshot.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/Volume"
    }
  ];

  // Required. The volume snapshot to create. Only the description field may be specified.
  VolumeSnapshot volume_snapshot = 2 [(google.api.field_behavior) = REQUIRED];
}

// Message for restoring a volume snapshot.
message RestoreVolumeSnapshotRequest {
  // Required. Name of the resource.
  string volume_snapshot = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "baremetalsolution.googleapis.com/VolumeSnapshot"
    }
  ];
}
