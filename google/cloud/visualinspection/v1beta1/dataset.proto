// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.visualinspection.v1beta1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/visualinspection/v1beta1/io.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Cloud.VisualInspection.V1Beta1";
option php_namespace = "Google\\Cloud\\VisualInspection\\V1beta1";
option ruby_package = "Google::Cloud::VisualInspection::V1beta1";
option go_package = "google.golang.org/genproto/googleapis/cloud/visualinspection/v1beta1;visualinspection";
option java_multiple_files = true;
option java_package = "com.google.cloud.visualinspection.v1beta1";

// A Dataset is a collection of Images and Annotations, which could be used to
// solve a specifc visual inspection problem.
message Dataset {
  option (google.api.resource) = {
    type: "visualinspection.googleapis.com/Dataset"
    pattern: "projects/{project}/locations/{location}/datasets/{dataset}"
  };

  // Output only. Resource name for the Dataset generated by the system.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Required. A user friendly display name for the Dataset.
  string display_name = 2 [(google.api.field_behavior) = REQUIRED];

  // Output only. Timestamp when this Dataset was created.
  google.protobuf.Timestamp create_time = 3
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Timestamp when this Dataset was last updated.
  google.protobuf.Timestamp update_time = 4
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // Used to perform consistent read-modify-write updates. If not set, a blind
  // "overwrite" update happens.
  string etag = 5;

  // The labels with user-defined metadata to organize your dataset.
  //
  // Label keys and values can be no longer than 64 characters
  // (Unicode codepoints), can only contain lowercase letters, numeric
  // characters, underscores and dashes. International characters are allowed.
  // Label keys must start with a letter.
  //
  // See https://goo.gl/xmQnxf for more information on and examples of labels.
  map<string, string> labels = 6;

  // Output only. The number of Images in the Dataset.
  int64 image_count = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// Describes the location from where we import data into a Dataset.
message ImportDataConfig {
  // The source of the input.
  oneof source {
    // The Google Cloud Storage location for the input content.
    // Supported file extensions:
    // 1. A JSON/CSV file.
    // 2. Image file. Supported extension includes jpg,jpeg,png.
    GcsSource gcs_source = 1;

    // Import data from another Dataset.
    DatasetSource dataset_resource = 2;
  }
}

// Describes the source Dataset from where we import data.
message DatasetSource {
  // Required. Dataset resource name. It needs to be in the same project and
  // location.
  string dataset = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "visualinspection.googleapis.com/Dataset"
    }
  ];

  // Filter on Images to import.
  string image_filter = 2;

  // Filter on Annotations to import. Only Annotations on already filtered in
  // Images are considered.
  string annotation_filter = 3;
}

// Describes the location to where we export data from a Dataset.
message ExportDataConfig {
  // The Google Cloud Storage location where the output is to be written to.
  // In the given directory a new directory will be created with name:
  // export-data-<dataset-display-name>-<timestamp-of-export-call> where
  // timestamp is in YYYYMMDDHHMMSS format. All export
  // output will be written into that directory. Inside that directory,
  // annotations with the same schema will be grouped into sub directories
  // which are named with the corresponding annotations' schema title. Inside
  // these sub directories, a schema.yaml will be created to describe the
  // output format.
  GcsDestination gcs_destination = 1;
}
