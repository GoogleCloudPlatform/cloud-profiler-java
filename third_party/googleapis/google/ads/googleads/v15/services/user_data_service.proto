// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

<<<<<<<< HEAD:third_party/googleapis/google/ads/googleads/v12/services/user_data_service.proto
package google.ads.googleads.v12.services;

import "google/ads/googleads/v12/common/offline_user_data.proto";
========
package google.ads.googleads.v15.services;

import "google/ads/googleads/v15/common/offline_user_data.proto";
>>>>>>>> f32f4c335637cf2eb42cb1833e4a2e204960fd72:third_party/googleapis/google/ads/googleads/v15/services/user_data_service.proto
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";

<<<<<<<< HEAD:third_party/googleapis/google/ads/googleads/v12/services/user_data_service.proto
option csharp_namespace = "Google.Ads.GoogleAds.V12.Services";
option go_package = "google.golang.org/genproto/googleapis/ads/googleads/v12/services;services";
option java_multiple_files = true;
option java_outer_classname = "UserDataServiceProto";
option java_package = "com.google.ads.googleads.v12.services";
option objc_class_prefix = "GAA";
option php_namespace = "Google\\Ads\\GoogleAds\\V12\\Services";
option ruby_package = "Google::Ads::GoogleAds::V12::Services";
========
option csharp_namespace = "Google.Ads.GoogleAds.V15.Services";
option go_package = "google.golang.org/genproto/googleapis/ads/googleads/v15/services;services";
option java_multiple_files = true;
option java_outer_classname = "UserDataServiceProto";
option java_package = "com.google.ads.googleads.v15.services";
option objc_class_prefix = "GAA";
option php_namespace = "Google\\Ads\\GoogleAds\\V15\\Services";
option ruby_package = "Google::Ads::GoogleAds::V15::Services";
>>>>>>>> f32f4c335637cf2eb42cb1833e4a2e204960fd72:third_party/googleapis/google/ads/googleads/v15/services/user_data_service.proto

// Proto file describing the UserDataService.

// Service to manage user data uploads.
// Any uploads made to a Customer Match list through this service will be
// eligible for matching as per the customer matching process. See
// https://support.google.com/google-ads/answer/7474263. However, the uploads
// made through this service will not be visible under the 'Segment members'
// section for the Customer Match List in the Google Ads UI.
service UserDataService {
  option (google.api.default_host) = "googleads.googleapis.com";
  option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/adwords";

  // Uploads the given user data.
  //
  // List of thrown errors:
  //   [AuthenticationError]()
  //   [AuthorizationError]()
  //   [CollectionSizeError]()
  //   [FieldError]()
  //   [HeaderError]()
  //   [InternalError]()
  //   [MutateError]()
  //   [OfflineUserDataJobError]()
  //   [QuotaError]()
  //   [RequestError]()
  //   [UserDataError]()
  rpc UploadUserData(UploadUserDataRequest) returns (UploadUserDataResponse) {
    option (google.api.http) = {
<<<<<<<< HEAD:third_party/googleapis/google/ads/googleads/v12/services/user_data_service.proto
      post: "/v12/customers/{customer_id=*}:uploadUserData"
========
      post: "/v15/customers/{customer_id=*}:uploadUserData"
>>>>>>>> f32f4c335637cf2eb42cb1833e4a2e204960fd72:third_party/googleapis/google/ads/googleads/v15/services/user_data_service.proto
      body: "*"
    };
  }
}

<<<<<<<< HEAD:third_party/googleapis/google/ads/googleads/v12/services/user_data_service.proto
// Request message for [UserDataService.UploadUserData][google.ads.googleads.v12.services.UserDataService.UploadUserData]
========
// Request message for
// [UserDataService.UploadUserData][google.ads.googleads.v15.services.UserDataService.UploadUserData]
>>>>>>>> f32f4c335637cf2eb42cb1833e4a2e204960fd72:third_party/googleapis/google/ads/googleads/v15/services/user_data_service.proto
message UploadUserDataRequest {
  // Required. The ID of the customer for which to update the user data.
  string customer_id = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The list of operations to be done.
  repeated UserDataOperation operations = 3
      [(google.api.field_behavior) = REQUIRED];

  // Metadata of the request.
  oneof metadata {
    // Metadata for data updates to a Customer Match user list.
<<<<<<<< HEAD:third_party/googleapis/google/ads/googleads/v12/services/user_data_service.proto
    google.ads.googleads.v12.common.CustomerMatchUserListMetadata customer_match_user_list_metadata = 2;
========
    google.ads.googleads.v15.common.CustomerMatchUserListMetadata
        customer_match_user_list_metadata = 2;
>>>>>>>> f32f4c335637cf2eb42cb1833e4a2e204960fd72:third_party/googleapis/google/ads/googleads/v15/services/user_data_service.proto
  }
}

// Operation to be made for the UploadUserDataRequest.
message UserDataOperation {
  // Operation to be made for the UploadUserDataRequest.
  oneof operation {
    // The list of user data to be appended to the user list.
<<<<<<<< HEAD:third_party/googleapis/google/ads/googleads/v12/services/user_data_service.proto
    google.ads.googleads.v12.common.UserData create = 1;

    // The list of user data to be removed from the user list.
    google.ads.googleads.v12.common.UserData remove = 2;
  }
}

// Response message for [UserDataService.UploadUserData][google.ads.googleads.v12.services.UserDataService.UploadUserData]
========
    google.ads.googleads.v15.common.UserData create = 1;

    // The list of user data to be removed from the user list.
    google.ads.googleads.v15.common.UserData remove = 2;
  }
}

// Response message for
// [UserDataService.UploadUserData][google.ads.googleads.v15.services.UserDataService.UploadUserData]
>>>>>>>> f32f4c335637cf2eb42cb1833e4a2e204960fd72:third_party/googleapis/google/ads/googleads/v15/services/user_data_service.proto
// Uploads made through this service will not be visible under the 'Segment
// members' section for the Customer Match List in the Google Ads UI.
message UploadUserDataResponse {
  // The date time at which the request was received by API, formatted as
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", for example, "2019-01-01 12:32:45-08:00".
  optional string upload_date_time = 3;

  // Number of upload data operations received by API.
  optional int32 received_operations_count = 4;
}
