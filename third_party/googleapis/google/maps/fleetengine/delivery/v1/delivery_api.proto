// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package maps.fleetengine.delivery.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/geo/type/viewport.proto";
import "google/maps/fleetengine/delivery/v1/delivery_vehicles.proto";
import "google/maps/fleetengine/delivery/v1/tasks.proto";
import "google/maps/fleetengine/v1/header.proto";
import "google/protobuf/field_mask.proto";

option go_package = "google.golang.org/genproto/googleapis/maps/fleetengine/delivery/v1;delivery";
option java_multiple_files = true;
option java_outer_classname = "DeliveryApi";
option java_package = "google.maps.fleetengine.delivery.v1";
option objc_class_prefix = "CFE";
option (google.api.resource_definition) = {
  type: "fleetengine.googleapis.com/Provider"
  pattern: "providers/{provider}"
};

// Last Mile Delivery service.
service DeliveryService {
  option (google.api.default_host) = "fleetengine.googleapis.com";

  // Creates a DeliveryVehicle in the Fleet Engine and returns the new
  // DeliveryVehicle.
  rpc CreateDeliveryVehicle(CreateDeliveryVehicleRequest)
      returns (DeliveryVehicle) {
    option (google.api.http) = {
      post: "/v1/{parent=providers/*}/deliveryVehicles"
      body: "delivery_vehicle"
    };
    option (google.api.method_signature) =
        "parent,delivery_vehicle,delivery_vehicle_id";
  }

  // GetDeliveryVehicle returns a DeliveryVehicle from the Fleet Engine.
  rpc GetDeliveryVehicle(GetDeliveryVehicleRequest) returns (DeliveryVehicle) {
    option (google.api.http) = {
      get: "/v1/{name=providers/*/deliveryVehicles/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // UpdateDeliveryVehicle writes updated DeliveryVehicle data to the Fleet
  // Engine and assigns Tasks to the DeliveryVehicle. The name of the
  // DeliveryVehicle cannot be updated. remaining_vehicle_journey_segments can
  // be updated, but must contain all the VehicleJourneySegments currently on
  // the DeliveryVehicle. The task_id's are retrieved from
  // remaining_vehicle_journey_segments and their corresponding Tasks are
  // assigned to the DeliveryVehicle if they have not yet been assigned to the
  // vehicle.
  rpc UpdateDeliveryVehicle(UpdateDeliveryVehicleRequest)
      returns (DeliveryVehicle) {
    option (google.api.http) = {
      patch: "/v1/{delivery_vehicle.name=providers/*/deliveryVehicles/*}"
      body: "delivery_vehicle"
    };
    option (google.api.method_signature) = "delivery_vehicle,update_mask";
  }

  // Creates a Task in the Fleet Engine and returns the new Task.
  rpc CreateTask(CreateTaskRequest) returns (Task) {
    option (google.api.http) = {
      post: "/v1/{parent=providers/*}/tasks"
      body: "task"
    };
    option (google.api.method_signature) = "parent,task,task_id";
  }

  // Gets information about a single Task.
  rpc GetTask(GetTaskRequest) returns (Task) {
    option (google.api.http) = {
      get: "/v1/{name=providers/*/tasks/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Get all tasks with a specific tracking_id.
  rpc SearchTasks(SearchTasksRequest) returns (SearchTasksResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=providers/*}/tasks:search"
    };
    option (google.api.method_signature) = "parent";
  }

  // Updates Task data.
  rpc UpdateTask(UpdateTaskRequest) returns (Task) {
    option (google.api.http) = {
      patch: "/v1/{task.name=providers/*/tasks/*}"
      body: "task"
    };
    option (google.api.method_signature) = "task,update_mask";
  }

  // Gets all tasks that meet specified filtering criteria.
  rpc ListTasks(ListTasksRequest) returns (ListTasksResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=providers/*}/tasks"
    };
    option (google.api.method_signature) = "parent";
  }

  // Gets all delivery vehicles that meet specified filtering criteria.
  rpc ListDeliveryVehicles(ListDeliveryVehiclesRequest)
      returns (ListDeliveryVehiclesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=providers/*}/deliveryVehicles"
    };
    option (google.api.method_signature) = "parent";
  }
}

// CreateDeliveryVehicle request message.
message CreateDeliveryVehicleRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. Must be in the format `providers/{provider}`.
  // The provider must be the Project ID (for example, `sample-cloud-project`)
  // of the Google Cloud Project of which the service account making
  // this call is a member.
  string parent = 3 [(google.api.field_behavior) = REQUIRED];

  // Required. The DeliveryVehicle ID must be unique for each provider. IDs are
  // subject to the following normalization and restrictions:
  //
  // 1. IDs must be valid Unicode strings.
  // 2. IDs are limited to a maximum length of 64 characters.
  // 3. IDs will be normalized according to Unicode Normalization Form C
  // (http://www.unicode.org/reports/tr15/).
  // 4. IDs may not contain any of the following ASCII characters: '/', ':',
  // '\\', '?', or '#'.
  string delivery_vehicle_id = 4 [(google.api.field_behavior) = REQUIRED];

  // Required. The DeliveryVehicle entity to create.
  // When creating a DeliveryVehicle, the following fields may optionally be
  // set:
  //   * last_location
  //   * attributes
  // All other DeliveryVehicle fields are ignored.
  DeliveryVehicle delivery_vehicle = 5 [(google.api.field_behavior) = REQUIRED];
}

// GetDeliveryVehicle request message.
// Next id: 4
message GetDeliveryVehicleRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. Must be in the format
  // `providers/{provider}/deliveryVehicles/{delivery_vehicle}`.
  // The provider must be the Project ID (for example, `sample-cloud-project`)
  // of the Google Cloud Project of which the service account making
  // this call is a member.
  string name = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "fleetengine.googleapis.com/DeliveryVehicle"
    }
  ];
}

// ListDeliveryVehicles request message.
message ListDeliveryVehiclesRequest {
  // Optional.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. Must be in the format `providers/{provider}`.
  // The provider must be the Project ID (for example, `sample-cloud-project`)
  // of the Google Cloud Project of which the service account making
  // this call is a member.
  string parent = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "fleetengine.googleapis.com/DeliveryVehicle"
    }
  ];

  // Optional. The maximum number of Vehicles to return. The service may return
  // fewer than this value. If unspecified, the server will decide the number of
  // results to return.
  int32 page_size = 4 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A page token, received from a previous `ListDeliveryVehicles`
  // call. Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListDeliveryVehicles`
  // must match the call that provided the page token.
  string page_token = 5 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A filter query to apply when listing delivery vehicles.
  // See http://aip.dev/160 for examples of filter syntax.
  // If no value is specified or filter is an empty string, all delivery
  // vehicles will be returned.
  string filter = 6 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A filter to limit the search area to a rectangle defined by the
  // northeast and southwest corner points.
  //
  // When defined, only vehicles located within the area range will be returned.
  google.geo.type.Viewport viewport = 7
      [(google.api.field_behavior) = OPTIONAL];
}

// ListDeliveryVehicles response message.
message ListDeliveryVehiclesResponse {
  // The list of delivery vehicles that meet the requested filtering criteria.
  repeated DeliveryVehicle delivery_vehicles = 1;

  // Pass this token in the ListDeliveryVehiclesRequest to continue to list
  // results. If all results have been returned, this field is an empty string
  // or not present in the response.
  string next_page_token = 2;

  // Total number of delivery vehicles matching request criteria across all
  // pages.
  int64 total_size = 3;
}

// UpdateDeliveryVehicle request message.
message UpdateDeliveryVehicleRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. The DeliveryVehicle entity update to apply.
  // The name of the DeliveryVehicle cannot be updated.
  DeliveryVehicle delivery_vehicle = 3 [(google.api.field_behavior) = REQUIRED];

  // Required. A field mask indicating which fields of the DeliveryVehicle to
  // update. The update_mask must contain at least one field.
  google.protobuf.FieldMask update_mask = 4
      [(google.api.field_behavior) = REQUIRED];
}

// CreateTask request message.
message CreateTaskRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. Must be in the format `providers/{provider}`.
  // The provider must be the Project ID (e.g. `sample-cloud-project`)
  // of the Google Cloud Project of which the service account making
  // this call is a member.
  string parent = 3 [(google.api.field_behavior) = REQUIRED];

  // Required. The Task ID must be unique for each provider. IDs are subject to
  // the following normalization and restrictions:
  //
  // 1. IDs must be valid Unicode strings.
  // 2. IDs are limited to a maximum length of 64 characters.
  // 3. IDs will be normalized according to Unicode Normalization Form C
  // (http://www.unicode.org/reports/tr15/).
  // 4. IDs may not contain any of the following ASCII characters: '/', ':',
  // '\\', '?', or '#'.
  string task_id = 5 [(google.api.field_behavior) = REQUIRED];

  // Required. Task entity to create.
  // When creating a Task, the following fields are required:
  //
  //   * type
  //   * state (must be set to 'OPEN' or request will fail)
  //   * tracking_id (must not be set for UNAVAILABLE or SCHEDULED_STOP tasks
  //       but required for all other task types.)
  //   * planned_location (optional for UNAVAILABLE tasks)
  //   * task_duration
  //
  // All other Task fields are ignored.
  Task task = 4 [(google.api.field_behavior) = REQUIRED];
}

// GetTask request message.
message GetTaskRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. Must be in the format `providers/{provider}/tasks/{task}`.
  // The provider must be the Project ID (e.g. `sample-cloud-project`) of the
  // Google Cloud Project of which the service account making this call is a
  // member.
  string name = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "fleetengine.googleapis.com/Task"
    }
  ];
}

// SearchTasks request message containing the tracking_id used to search Tasks.
message SearchTasksRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. Must be in the format `providers/{provider}`.
  // The provider must be the Project ID (for example, `sample-cloud-project`)
  // of the Google Cloud Project of which the service account making
  // this call is a member.
  string parent = 3 [(google.api.field_behavior) = REQUIRED];

  // Required. Identifier for the related set of tasks that are being requested.
  string tracking_id = 4 [(google.api.field_behavior) = REQUIRED];

  // Optional. The maximum number of Tasks to return. The service may return
  // fewer than this value. If unspecified, the server will decide the number of
  // results to return.
  int32 page_size = 5 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A page token, received from a previous `SearchTasks` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `SearchTasks` must match
  // the call that provided the page token.
  string page_token = 6 [(google.api.field_behavior) = OPTIONAL];
}

// SearchTasks response containing list of Tasks which met the search criteria
// in the SearchTasksRequest.
message SearchTasksResponse {
  // The list of tasks for the requested tracking_id.
  repeated Task tasks = 1;

  // Pass this token in the SearchTasksRequest to continue to
  // list results. If all results have been returned, this field is an empty
  // string or not present in the response.
  string next_page_token = 2;
}

// UpdateTask request message.
message UpdateTaskRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. The Task associated with the update.
  // The following fields are maintained by the Fleet Engine. Do not update
  // them using Task.update.
  //   * last_location
  //   * last_location_snappable
  //   * name
  //   * remaining_vehicle_journey_segments
  //   * task_outcome_location_source
  //
  // The task_outcome cannot be changed once it has been set.
  //
  // If the Task has been assigned a delivery vehicle, do not set the Task state
  // to CLOSED using Task.update. Instead, remove the VehicleStop containing
  // the Task from the delivery vehicle, which automatically sets the Task
  // state to CLOSED.
  Task task = 3 [(google.api.field_behavior) = REQUIRED];

  // Required. The field mask indicating which fields in Task to
  // update. The update_mask must contain at least one field.
  google.protobuf.FieldMask update_mask = 4
      [(google.api.field_behavior) = REQUIRED];
}

// ListTasks request message.
message ListTasksRequest {
  // Optional. The standard Fleet Engine request header.
  maps.fleetengine.v1.RequestHeader header = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required. Must be in the format `providers/{provider}`.
  // The provider must be the Project ID (for example, `sample-cloud-project`)
  // of the Google Cloud Project of which the service account making
  // this call is a member.
  string parent = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "fleetengine.googleapis.com/Task"
    }
  ];

  // Optional. The maximum number of Tasks to return. The service may return
  // fewer than this value. If unspecified, the server will decide the number of
  // results to return.
  int32 page_size = 4 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A page token, received from a previous `ListTasks` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListTasks` must match
  // the call that provided the page token.
  string page_token = 5 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A filter query to apply when listing tasks.
  // See http://aip.dev/160 for examples of filter syntax.
  // If no value is specified or filter is an empty string, all tasks will be
  // returned.
  string filter = 6 [(google.api.field_behavior) = OPTIONAL];
}

// ListTasks response containing list of Tasks which met the filter criteria
// in the ListTasksRequest.
message ListTasksResponse {
  // The list of tasks that meet the requested filtering criteria.
  repeated Task tasks = 1;

  // Pass this token in the ListTasksRequest to continue to list results.
  // If all results have been returned, this field is an empty string or not
  // present in the response.
  string next_page_token = 2;

  // Total number of tasks matching request criteria across all pages.
  int64 total_size = 3;
}
